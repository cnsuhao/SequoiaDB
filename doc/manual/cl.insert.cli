.TH COMMAND * 2014-04-08 "SequoiaDB" "Sequoiadb Method's Manual"
.ad l.ll 72.ce 1000
\fBdb.collectionspace.collection.insert()\fR
.ce 0
.sp 2

.SH "NAME"

.sp 2
insert - Insert records into a specified collection.
.SH "SYNOPSIS"

.sp 2

.sp 2

.sp 2
db.collectionspace.collection.insert(\fB<doc|docs>\fR,\fB[flag]\fR)
.SH "CATEGORY"

.sp 2

.sp 2
Collection
.SH "DESCRIPTION"

.sp 2
Insert records into a specified collection. If the collection
space or collection doesn't exist, please create a new collection
space. For example, the command "db.createCS("foo")" creates a
new collection space named "foo". Then create a new collection in
collection space. For instance, the command
"db.foo.createCL("bar")" creates a collection named "bar" under
the collection space "foo" so that users can insert data into the
collection "bar".
.sp 2
\fBdoc|docs (json object)\fR
.br
       Document record. The parameter "doc" means one record. The
       parameter "docs" means more than one record.
.sp 2
\fBflag (int)\fR
.br
       SDB_INSERT_RETURN_ID or SDB_INSERT_CONTONDUP. The former
       one is valid when insert a single record, the latter one
       is valid when insert multiple records, it means that when
       multiple records are inserted, if records with repeated
       "_id" field occurs, these records will be skipped and the
       database will continue with subsequent records. In the
       default case, if records with repeated "_id" field occurs,
       the insert action will be terminated and the subsequent
       records will not be inserted..
.sp 2
       \fBFormat\fR
.br
              The definition of "insert()" contains two fields:
              doc|docs and flag.
.br
              doc: ({"< field name 1>":"< value >","< field name
              2>":"< value
              >",...}[,SDB_INSERT_CONTONDUP|SDB_INSERT_RETURN_ID
              })
.br
              docs: ([ {"< field name 1>":"< value >","< field
              name 2>":"< value >",...}, {"< field name 1>":"<
              value >","< field name 2>":"< value >",...},... ])
.sp 2
\fBNote: \fR
.sp 2
   *  If the value of "_id" is not specified in a record that is
   about to be inserted, the system will generate the value of
   "_id" automatically to ensure the uniqueness of the record.
.SH "Examples"

.sp 2
Insert a record without the value of "_id".
.sp 2
db.foo.bar.insert({name:"Tom",age:20})
.sp 2
This operation inserts a new record into collection "bar". In
this record, the value of "name" is "Tom", and the value of "age"
is 20. The value of "_id" is uniquely generated:
.sp 2
{ "_id": { "$oid": "515152ba49af395200000000" }, "name": "Tom", "age": 20 }
.sp 2
Insert a record that contains the value of "_id".
.sp 2
db.foo.bar.insert({_id:10,age:20})
.sp 2
This operation inserts a new record into the collection "bar".
The value of "_id" is 10. The value of "age" is 20:
.sp 2
{ "_id": 10, "age": 20 }
.sp 2
Insert more than one record.
.sp 2
db.foo.bar.insert([{_id:20,name:"Mike",age:15},{name:"John",age:25,phone:123}])
.sp 2
This operation will insert 2 records into the collection "bar":
.sp 2
1)In the first record, the value of "_id" is 20. The value of
"name" is "Mike". The value of "age" is 15.
.sp 2
2)In the second record, the value of "_id" is generated by the
system. The value of "name" is "John". The value of "age" is 25.
The value of "phone" is 123.
.sp 2
     {
.br
        "_id": 20, 
.br
        "name": "Mike", 
.br
        "age": 15 
.br
        }
.sp 2
     { 
.br
        "_id": { "$oid": "5151557a49af395200000001" }, 
.br
        "name": "John", 
.br
        "age": 25, 
.br
        "phone": 123 
.br
        }
.sp 2
Insert records with repeated "_id" field.
.sp 2
db.foo.bar.insert([{_id:1,a:1 },{_id:1,b:2 },{_id:3,c:3}], SDB_INSERT_CONTONDUP)
.sp 2
This operation will insert two records in collection "bar".
.sp 2
{
.br
"_id": 1,
.br
"a": 1,
.br
}
.br
{
.br
"_id": 3,
.br
"c": 3
.br
}